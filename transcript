# Reading C:/intelFPGA_lite/19.1/modelsim_ase/tcl/vsim/pref.tcl
do runlab_State_Machine.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:49:42 on May 27,2020
# vlog -reportprogress 300 ./StateMachine.sv 
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 21:49:43 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work StateMachine_tb 
# Start time: 21:49:43 on May 27,2020
# Loading sv_std.std
# Loading work.StateMachine_tb
# Loading work.StateMachine
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Break key hit
# Break in Module StateMachine_tb at ./StateMachine.sv line 112
do runlab_State_Machine.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:51:39 on May 27,2020
# vlog -reportprogress 300 ./StateMachine.sv 
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 21:51:39 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 21:51:41 on May 27,2020, Elapsed time: 0:01:58
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work StateMachine_tb 
# Start time: 21:51:42 on May 27,2020
# Loading sv_std.std
# Loading work.StateMachine_tb
# Loading work.StateMachine
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Break key hit
# Simulation stop requested.
do runlab_State_Machine.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:56:11 on May 27,2020
# vlog -reportprogress 300 ./StateMachine.sv 
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 21:56:11 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 21:56:12 on May 27,2020, Elapsed time: 0:04:30
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work StateMachine_tb 
# Start time: 21:56:13 on May 27,2020
# Loading sv_std.std
# Loading work.StateMachine_tb
# Loading work.StateMachine
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# ** Note: $stop    : ./StateMachine.sv(131)
#    Time: 484 ps  Iteration: 0  Instance: /StateMachine_tb
# Break in Module StateMachine_tb at ./StateMachine.sv line 131
do runrtl_ControlUnit.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Instruction_Mem.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:59:34 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruction_Mem.sv 
# -- Compiling module Instruction_Mem
# -- Compiling module Instruction_Mem_tb
# 
# Top level modules:
# 	Instruction_Mem_tb
# End time: 21:59:34 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:59:34 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./InstructionMem.v 
# -- Compiling module InstructionMem
# 
# Top level modules:
# 	InstructionMem
# End time: 21:59:34 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:59:35 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling module StateMachine
# ** Note: (vlog-143) Recognized 1 FSM in module "StateMachine(verilog)".
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 21:59:35 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_Counter.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:59:35 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./PC_Counter.sv 
# -- Compiling module PC_Counter
# -- Compiling module PC_Counter_tb
# 
# Top level modules:
# 	PC_Counter_tb
# End time: 21:59:36 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Instruc_Reg.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:59:36 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruc_Reg.sv 
# -- Compiling module Instruc_Reg
# -- Compiling module Instruc_Reg_tb
# 
# Top level modules:
# 	Instruc_Reg_tb
# End time: 21:59:36 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:59:37 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 21:59:37 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  ControlUnit_tb
# End time: 21:59:39 on May 27,2020, Elapsed time: 0:03:26
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug ControlUnit_tb 
# Start time: 21:59:39 on May 27,2020
# Loading sv_std.std
# Loading work.ControlUnit_tb
# Loading work.ControlUnit
# Loading work.InstructionMem
# Loading altera_mf_ver.altsyncram
# Loading work.Instruc_Reg
# Loading work.StateMachine
# Loading work.PC_Counter
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do ControlUnit_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /ControlUnit_tb/clk
# add wave -noupdate /ControlUnit_tb/reset
# add wave -noupdate /ControlUnit_tb/D_Wr
# add wave -noupdate /ControlUnit_tb/RF_s
# add wave -noupdate /ControlUnit_tb/RF_W_en
# add wave -noupdate /ControlUnit_tb/PC_Out
# add wave -noupdate /ControlUnit_tb/IR_Out
# add wave -noupdate /ControlUnit_tb/data
# add wave -noupdate /ControlUnit_tb/RF_Ra_addr
# add wave -noupdate /ControlUnit_tb/RF_Rb_addr
# add wave -noupdate /ControlUnit_tb/RF_W_addr
# add wave -noupdate /ControlUnit_tb/D_addr
# add wave -noupdate /ControlUnit_tb/OutState
# add wave -noupdate /ControlUnit_tb/NextState
# add wave -noupdate /ControlUnit_tb/ALU_s0
# add wave -noupdate /ControlUnit_tb/PC_clr
# add wave -noupdate /ControlUnit_tb/PC_up
# add wave -noupdate /ControlUnit_tb/IR_ld
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {10736 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 291
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {102451 ps}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =110 PC_Out =0000001 Instruction Data =0000000000000000 Instruction Register Output =0000000000000000 RF_Ra_addr =xxxx RF_Rb_addr =xxxx RF_W_addr =xxxx D_addr =xxxxxxxx OutState =0011 ALU_s0 =xxx D_Wr =x RF_s =x RF_W_en =0
# Time =190 PC_Out =0000010 Instruction Data =0011000100100011 Instruction Register Output =0010000000011111 RF_Ra_addr =xxxx RF_Rb_addr =xxxx RF_W_addr =1111 D_addr =00000001 OutState =0101 ALU_s0 =xxx D_Wr =x RF_s =1 RF_W_en =1
# Time =250 PC_Out =0000011 Instruction Data =0011000100100011 Instruction Register Output =0011000100100011 RF_Ra_addr =0001 RF_Rb_addr =0010 RF_W_addr =0011 D_addr =00000001 OutState =0111 ALU_s0 =001 D_Wr =x RF_s =0 RF_W_en =1
# Time =310 PC_Out =0000100 Instruction Data =0100101010010000 Instruction Register Output =0100101010010000 RF_Ra_addr =1010 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000001 OutState =1000 ALU_s0 =010 D_Wr =x RF_s =0 RF_W_en =1
# Time =370 PC_Out =0000101 Instruction Data =0001010000000000 Instruction Register Output =0001010000000000 RF_Ra_addr =0100 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000000 OutState =0110 ALU_s0 =010 D_Wr =x RF_s =0 RF_W_en =0
# Time =430 PC_Out =0000110 Instruction Data =0101000000000000 Instruction Register Output =0101000000000000 RF_Ra_addr =0100 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000000 OutState =1001 ALU_s0 =010 D_Wr =x RF_s =0 RF_W_en =0
# ** Note: $stop    : ./ControlUnit.sv(72)
#    Time: 492 ps  Iteration: 0  Instance: /ControlUnit_tb
# Break in Module ControlUnit_tb at ./ControlUnit.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 517 ps
# 
# End
do runrtl_ControlUnit.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Instruction_Mem.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:02:39 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruction_Mem.sv 
# -- Compiling module Instruction_Mem
# -- Compiling module Instruction_Mem_tb
# 
# Top level modules:
# 	Instruction_Mem_tb
# End time: 22:02:40 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:02:41 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./InstructionMem.v 
# -- Compiling module InstructionMem
# 
# Top level modules:
# 	InstructionMem
# End time: 22:02:42 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:02:43 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling module StateMachine
# ** Note: (vlog-143) Recognized 1 FSM in module "StateMachine(verilog)".
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 22:02:44 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_Counter.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:02:45 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./PC_Counter.sv 
# -- Compiling module PC_Counter
# -- Compiling module PC_Counter_tb
# 
# Top level modules:
# 	PC_Counter_tb
# End time: 22:02:46 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Instruc_Reg.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:02:47 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruc_Reg.sv 
# -- Compiling module Instruc_Reg
# -- Compiling module Instruc_Reg_tb
# 
# Top level modules:
# 	Instruc_Reg_tb
# End time: 22:02:48 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:02:49 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 22:02:50 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  ControlUnit_tb
# End time: 22:03:19 on May 27,2020, Elapsed time: 0:03:40
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug ControlUnit_tb 
# Start time: 22:03:20 on May 27,2020
# Loading sv_std.std
# Loading work.ControlUnit_tb
# Loading work.ControlUnit
# Loading work.InstructionMem
# Loading altera_mf_ver.altsyncram
# Loading work.Instruc_Reg
# Loading work.StateMachine
# Loading work.PC_Counter
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Error: (vsim-3043) ./ControlUnit.sv(55): Unresolved reference to 'D_Wr'.
#    Time: 0 ps  Iteration: 0  Instance: /ControlUnit_tb File: ./ControlUnit.sv
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runrtl_ControlUnit.do PAUSED at line 26
do runlab_State_Machine.do
# Create work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:04:26 on May 27,2020
# vlog -reportprogress 300 ./StateMachine.sv 
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 22:04:27 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -voptargs="+acc" -t 1ps -lib work StateMachine_tb
# vsim -voptargs=""+acc"" -t 1ps -lib work StateMachine_tb 
# Start time: 22:03:20 on May 27,2020
# Loading sv_std.std
# Loading work.StateMachine_tb
# Loading work.StateMachine
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do State_Machine_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /StateMachine_tb/data
# add wave -noupdate /StateMachine_tb/PC_clr
# add wave -noupdate /StateMachine_tb/PC_up
# add wave -noupdate /StateMachine_tb/IR_ld
# add wave -noupdate /StateMachine_tb/RF_s
# add wave -noupdate /StateMachine_tb/RF_W_en
# add wave -noupdate /StateMachine_tb/reset
# add wave -noupdate /StateMachine_tb/D_wr
# add wave -noupdate /StateMachine_tb/clk
# add wave -noupdate /StateMachine_tb/RF_W_addr
# add wave -noupdate /StateMachine_tb/RF_Ra_addr
# add wave -noupdate /StateMachine_tb/RF_Rb_addr
# add wave -noupdate /StateMachine_tb/ALU_s0
# add wave -noupdate /StateMachine_tb/D_addr
# add wave -noupdate /StateMachine_tb/CurrentState
# add wave -noupdate /StateMachine_tb/NextState
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {68 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ** Note: $stop    : ./StateMachine.sv(131)
#    Time: 484 ps  Iteration: 0  Instance: /StateMachine_tb
# Break in Module StateMachine_tb at ./StateMachine.sv line 131
# 
# End
do runrtl_ControlUnit.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib.qdb".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Instruction_Mem.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:06:48 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruction_Mem.sv 
# -- Compiling module Instruction_Mem
# -- Compiling module Instruction_Mem_tb
# 
# Top level modules:
# 	Instruction_Mem_tb
# End time: 22:06:49 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:06:50 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./InstructionMem.v 
# -- Compiling module InstructionMem
# 
# Top level modules:
# 	InstructionMem
# End time: 22:06:50 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:06:51 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling module StateMachine
# ** Note: (vlog-143) Recognized 1 FSM in module "StateMachine(verilog)".
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 22:06:52 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_Counter.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:06:53 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./PC_Counter.sv 
# -- Compiling module PC_Counter
# -- Compiling module PC_Counter_tb
# 
# Top level modules:
# 	PC_Counter_tb
# End time: 22:06:54 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Instruc_Reg.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:06:55 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruc_Reg.sv 
# -- Compiling module Instruc_Reg
# -- Compiling module Instruc_Reg_tb
# 
# Top level modules:
# 	Instruc_Reg_tb
# End time: 22:06:56 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:06:57 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 22:06:57 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  ControlUnit_tb
# End time: 22:07:04 on May 27,2020, Elapsed time: 0:03:44
# Errors: 1, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug ControlUnit_tb 
# Start time: 22:07:05 on May 27,2020
# Loading sv_std.std
# Loading work.ControlUnit_tb
# Loading work.ControlUnit
# Loading work.InstructionMem
# Loading altera_mf_ver.altsyncram
# Loading work.Instruc_Reg
# Loading work.StateMachine
# Loading work.PC_Counter
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do ControlUnit_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /ControlUnit_tb/clk
# add wave -noupdate /ControlUnit_tb/reset
# add wave -noupdate /ControlUnit_tb/D_Wr
# ** Error: (vish-4014) No objects found matching '/ControlUnit_tb/D_Wr'.
# Executing ONERROR command at macro ./ControlUnit_wave.do line 5
# add wave -noupdate /ControlUnit_tb/RF_s
# add wave -noupdate /ControlUnit_tb/RF_W_en
# add wave -noupdate /ControlUnit_tb/PC_Out
# add wave -noupdate /ControlUnit_tb/IR_Out
# add wave -noupdate /ControlUnit_tb/data
# add wave -noupdate /ControlUnit_tb/RF_Ra_addr
# add wave -noupdate /ControlUnit_tb/RF_Rb_addr
# add wave -noupdate /ControlUnit_tb/RF_W_addr
# add wave -noupdate /ControlUnit_tb/D_addr
# add wave -noupdate /ControlUnit_tb/OutState
# add wave -noupdate /ControlUnit_tb/NextState
# add wave -noupdate /ControlUnit_tb/ALU_s0
# add wave -noupdate /ControlUnit_tb/PC_clr
# add wave -noupdate /ControlUnit_tb/PC_up
# add wave -noupdate /ControlUnit_tb/IR_ld
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {10736 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 291
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {102451 ps}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =110 PC_Out =0000001 Instruction Data =0000000000000000 Instruction Register Output =0000000000000000 RF_Ra_addr =xxxx RF_Rb_addr =xxxx RF_W_addr =xxxx D_addr =xxxxxxxx OutState =0011 ALU_s0 =xxx D_Wr =x RF_s =x RF_W_en =0
# Time =190 PC_Out =0000010 Instruction Data =0011000100100011 Instruction Register Output =0010000000011111 RF_Ra_addr =xxxx RF_Rb_addr =xxxx RF_W_addr =1111 D_addr =00000001 OutState =0101 ALU_s0 =xxx D_Wr =x RF_s =1 RF_W_en =1
# Time =250 PC_Out =0000011 Instruction Data =0011000100100011 Instruction Register Output =0011000100100011 RF_Ra_addr =0001 RF_Rb_addr =0010 RF_W_addr =0011 D_addr =00000001 OutState =0111 ALU_s0 =001 D_Wr =x RF_s =0 RF_W_en =1
# Time =310 PC_Out =0000100 Instruction Data =0100101010010000 Instruction Register Output =0100101010010000 RF_Ra_addr =1010 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000001 OutState =1000 ALU_s0 =010 D_Wr =x RF_s =0 RF_W_en =1
# Time =370 PC_Out =0000101 Instruction Data =0001010000000000 Instruction Register Output =0001010000000000 RF_Ra_addr =0100 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000000 OutState =0110 ALU_s0 =010 D_Wr =x RF_s =0 RF_W_en =0
# Time =430 PC_Out =0000110 Instruction Data =0101000000000000 Instruction Register Output =0101000000000000 RF_Ra_addr =0100 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000000 OutState =1001 ALU_s0 =010 D_Wr =x RF_s =0 RF_W_en =0
# ** Note: $stop    : ./ControlUnit.sv(72)
#    Time: 492 ps  Iteration: 0  Instance: /ControlUnit_tb
# Break in Module ControlUnit_tb at ./ControlUnit.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 517 ps
# 
# End
add wave -position end  sim:/ControlUnit_tb/D_wr
write format wave -window .main_pane.wave.interior.cs.body.pw.wf C:/Users/taras/Documents/GitHub/ProjectB/ControlUnit_wave.do
write format wave -window .main_pane.wave.interior.cs.body.pw.wf C:/Users/taras/Documents/GitHub/ProjectB/ControlUnit_wave.do
do runrtl_ControlUnit.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Instruction_Mem.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:09:23 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruction_Mem.sv 
# -- Compiling module Instruction_Mem
# -- Compiling module Instruction_Mem_tb
# 
# Top level modules:
# 	Instruction_Mem_tb
# End time: 22:09:23 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:09:24 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./InstructionMem.v 
# -- Compiling module InstructionMem
# 
# Top level modules:
# 	InstructionMem
# End time: 22:09:24 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:09:25 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling module StateMachine
# ** Note: (vlog-143) Recognized 1 FSM in module "StateMachine(verilog)".
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 22:09:25 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_Counter.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:09:26 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./PC_Counter.sv 
# -- Compiling module PC_Counter
# -- Compiling module PC_Counter_tb
# 
# Top level modules:
# 	PC_Counter_tb
# End time: 22:09:26 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Instruc_Reg.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:09:27 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruc_Reg.sv 
# -- Compiling module Instruc_Reg
# -- Compiling module Instruc_Reg_tb
# 
# Top level modules:
# 	Instruc_Reg_tb
# End time: 22:09:27 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:09:28 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 22:09:28 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  ControlUnit_tb
# End time: 22:09:32 on May 27,2020, Elapsed time: 0:02:27
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug ControlUnit_tb 
# Start time: 22:09:33 on May 27,2020
# Loading sv_std.std
# Loading work.ControlUnit_tb
# Loading work.ControlUnit
# Loading work.InstructionMem
# Loading altera_mf_ver.altsyncram
# Loading work.Instruc_Reg
# Loading work.StateMachine
# Loading work.PC_Counter
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do ControlUnit_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /ControlUnit_tb/clk
# add wave -noupdate /ControlUnit_tb/reset
# add wave -noupdate /ControlUnit_tb/RF_s
# add wave -noupdate /ControlUnit_tb/RF_W_en
# add wave -noupdate /ControlUnit_tb/PC_Out
# add wave -noupdate /ControlUnit_tb/IR_Out
# add wave -noupdate /ControlUnit_tb/data
# add wave -noupdate /ControlUnit_tb/RF_Ra_addr
# add wave -noupdate /ControlUnit_tb/RF_Rb_addr
# add wave -noupdate /ControlUnit_tb/RF_W_addr
# add wave -noupdate /ControlUnit_tb/D_addr
# add wave -noupdate /ControlUnit_tb/OutState
# add wave -noupdate /ControlUnit_tb/NextState
# add wave -noupdate /ControlUnit_tb/ALU_s0
# add wave -noupdate /ControlUnit_tb/PC_clr
# add wave -noupdate /ControlUnit_tb/PC_up
# add wave -noupdate /ControlUnit_tb/IR_ld
# add wave -noupdate /ControlUnit_tb/D_wr
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {169 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 291
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {517 ps}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =110 PC_Out =0000001 Instruction Data =0000000000000000 Instruction Register Output =0000000000000000 RF_Ra_addr =xxxx RF_Rb_addr =xxxx RF_W_addr =xxxx D_addr =xxxxxxxx OutState =0011 ALU_s0 =xxx D_Wr =x RF_s =x RF_W_en =0
# Time =190 PC_Out =0000010 Instruction Data =0011000100100011 Instruction Register Output =0010000000011111 RF_Ra_addr =xxxx RF_Rb_addr =xxxx RF_W_addr =1111 D_addr =00000001 OutState =0101 ALU_s0 =xxx D_Wr =x RF_s =1 RF_W_en =1
# Time =250 PC_Out =0000011 Instruction Data =0011000100100011 Instruction Register Output =0011000100100011 RF_Ra_addr =0001 RF_Rb_addr =0010 RF_W_addr =0011 D_addr =00000001 OutState =0111 ALU_s0 =001 D_Wr =x RF_s =0 RF_W_en =1
# Time =310 PC_Out =0000100 Instruction Data =0100101010010000 Instruction Register Output =0100101010010000 RF_Ra_addr =1010 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000001 OutState =1000 ALU_s0 =010 D_Wr =x RF_s =0 RF_W_en =1
# Time =370 PC_Out =0000101 Instruction Data =0001010000000000 Instruction Register Output =0001010000000000 RF_Ra_addr =0100 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000000 OutState =0110 ALU_s0 =010 D_Wr =x RF_s =0 RF_W_en =0
# Time =430 PC_Out =0000110 Instruction Data =0101000000000000 Instruction Register Output =0101000000000000 RF_Ra_addr =0100 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000000 OutState =1001 ALU_s0 =010 D_Wr =x RF_s =0 RF_W_en =0
# ** Note: $stop    : ./ControlUnit.sv(72)
#    Time: 492 ps  Iteration: 0  Instance: /ControlUnit_tb
# Break in Module ControlUnit_tb at ./ControlUnit.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 517 ps
# 
# End
do runrtl_ControlUnit.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Instruction_Mem.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:10:32 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruction_Mem.sv 
# -- Compiling module Instruction_Mem
# -- Compiling module Instruction_Mem_tb
# 
# Top level modules:
# 	Instruction_Mem_tb
# End time: 22:10:32 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:10:33 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./InstructionMem.v 
# -- Compiling module InstructionMem
# 
# Top level modules:
# 	InstructionMem
# End time: 22:10:33 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:10:34 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling module StateMachine
# ** Note: (vlog-143) Recognized 1 FSM in module "StateMachine(verilog)".
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 22:10:34 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_Counter.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:10:34 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./PC_Counter.sv 
# -- Compiling module PC_Counter
# -- Compiling module PC_Counter_tb
# 
# Top level modules:
# 	PC_Counter_tb
# End time: 22:10:35 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Instruc_Reg.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:10:36 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruc_Reg.sv 
# -- Compiling module Instruc_Reg
# -- Compiling module Instruc_Reg_tb
# 
# Top level modules:
# 	Instruc_Reg_tb
# End time: 22:10:36 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:10:37 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling module ControlUnit
# ** Error: ./ControlUnit.sv(8): (vlog-2730) Undefined variable: 'D_Wr'.
# ** Error: ./ControlUnit.sv(8): Identifier must be declared with a port mode: D_Wr.
# -- Compiling module ControlUnit_tb
# End time: 22:10:37 on May 27,2020, Elapsed time: 0:00:00
# Errors: 2, Warnings: 0
# ** Error: C:/intelFPGA_lite/19.1/modelsim_ase/win32aloem/vlog failed.
# Error in macro ./runrtl_ControlUnit.do line 21
# C:/intelFPGA_lite/19.1/modelsim_ase/win32aloem/vlog failed.
#     while executing
# "vlog -work work +acc "./ControlUnit.sv""
do runrtl_ControlUnit.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Instruction_Mem.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:11:03 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruction_Mem.sv 
# -- Compiling module Instruction_Mem
# -- Compiling module Instruction_Mem_tb
# 
# Top level modules:
# 	Instruction_Mem_tb
# End time: 22:11:03 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:11:04 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./InstructionMem.v 
# -- Compiling module InstructionMem
# 
# Top level modules:
# 	InstructionMem
# End time: 22:11:04 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:11:04 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling module StateMachine
# ** Note: (vlog-143) Recognized 1 FSM in module "StateMachine(verilog)".
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 22:11:04 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_Counter.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:11:05 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./PC_Counter.sv 
# -- Compiling module PC_Counter
# -- Compiling module PC_Counter_tb
# 
# Top level modules:
# 	PC_Counter_tb
# End time: 22:11:05 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Instruc_Reg.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:11:05 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruc_Reg.sv 
# -- Compiling module Instruc_Reg
# -- Compiling module Instruc_Reg_tb
# 
# Top level modules:
# 	Instruc_Reg_tb
# End time: 22:11:06 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:11:06 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 22:11:06 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  ControlUnit_tb
# End time: 22:11:09 on May 27,2020, Elapsed time: 0:01:36
# Errors: 5, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug ControlUnit_tb 
# Start time: 22:11:10 on May 27,2020
# Loading sv_std.std
# Loading work.ControlUnit_tb
# Loading work.ControlUnit
# Loading work.InstructionMem
# Loading altera_mf_ver.altsyncram
# Loading work.Instruc_Reg
# Loading work.StateMachine
# Loading work.PC_Counter
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do ControlUnit_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /ControlUnit_tb/clk
# add wave -noupdate /ControlUnit_tb/reset
# add wave -noupdate /ControlUnit_tb/RF_s
# add wave -noupdate /ControlUnit_tb/RF_W_en
# add wave -noupdate /ControlUnit_tb/PC_Out
# add wave -noupdate /ControlUnit_tb/IR_Out
# add wave -noupdate /ControlUnit_tb/data
# add wave -noupdate /ControlUnit_tb/RF_Ra_addr
# add wave -noupdate /ControlUnit_tb/RF_Rb_addr
# add wave -noupdate /ControlUnit_tb/RF_W_addr
# add wave -noupdate /ControlUnit_tb/D_addr
# add wave -noupdate /ControlUnit_tb/OutState
# add wave -noupdate /ControlUnit_tb/NextState
# add wave -noupdate /ControlUnit_tb/ALU_s0
# add wave -noupdate /ControlUnit_tb/PC_clr
# add wave -noupdate /ControlUnit_tb/PC_up
# add wave -noupdate /ControlUnit_tb/IR_ld
# add wave -noupdate /ControlUnit_tb/D_wr
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {169 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 291
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {517 ps}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =110 PC_Out =0000001 Instruction Data =0000000000000000 Instruction Register Output =0000000000000000 RF_Ra_addr =xxxx RF_Rb_addr =xxxx RF_W_addr =xxxx D_addr =xxxxxxxx OutState =0011 ALU_s0 =xxx D_Wr =0 RF_s =x RF_W_en =0
# Time =190 PC_Out =0000010 Instruction Data =0011000100100011 Instruction Register Output =0010000000011111 RF_Ra_addr =xxxx RF_Rb_addr =xxxx RF_W_addr =1111 D_addr =00000001 OutState =0101 ALU_s0 =xxx D_Wr =0 RF_s =1 RF_W_en =1
# Time =250 PC_Out =0000011 Instruction Data =0011000100100011 Instruction Register Output =0011000100100011 RF_Ra_addr =0001 RF_Rb_addr =0010 RF_W_addr =0011 D_addr =00000001 OutState =0111 ALU_s0 =001 D_Wr =0 RF_s =0 RF_W_en =1
# Time =310 PC_Out =0000100 Instruction Data =0100101010010000 Instruction Register Output =0100101010010000 RF_Ra_addr =1010 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000001 OutState =1000 ALU_s0 =010 D_Wr =0 RF_s =0 RF_W_en =1
# Time =370 PC_Out =0000101 Instruction Data =0001010000000000 Instruction Register Output =0001010000000000 RF_Ra_addr =0100 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000000 OutState =0110 ALU_s0 =010 D_Wr =1 RF_s =0 RF_W_en =0
# Time =430 PC_Out =0000110 Instruction Data =0101000000000000 Instruction Register Output =0101000000000000 RF_Ra_addr =0100 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000000 OutState =1001 ALU_s0 =010 D_Wr =0 RF_s =0 RF_W_en =0
# ** Note: $stop    : ./ControlUnit.sv(72)
#    Time: 492 ps  Iteration: 0  Instance: /ControlUnit_tb
# Break in Module ControlUnit_tb at ./ControlUnit.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 517 ps
# 
# End
do runrtl_ControlUnit.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Instruction_Mem.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:26:35 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruction_Mem.sv 
# -- Compiling module Instruction_Mem
# -- Compiling module Instruction_Mem_tb
# 
# Top level modules:
# 	Instruction_Mem_tb
# End time: 22:26:35 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstructionMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:26:36 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./InstructionMem.v 
# -- Compiling module InstructionMem
# 
# Top level modules:
# 	InstructionMem
# End time: 22:26:36 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:26:36 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling module StateMachine
# ** Note: (vlog-143) Recognized 1 FSM in module "StateMachine(verilog)".
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 22:26:36 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_Counter.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:26:37 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./PC_Counter.sv 
# -- Compiling module PC_Counter
# -- Compiling module PC_Counter_tb
# 
# Top level modules:
# 	PC_Counter_tb
# End time: 22:26:37 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Instruc_Reg.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:26:37 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./Instruc_Reg.sv 
# -- Compiling module Instruc_Reg
# -- Compiling module Instruc_Reg_tb
# 
# Top level modules:
# 	Instruc_Reg_tb
# End time: 22:26:38 on May 27,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 22:26:38 on May 27,2020
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 22:26:38 on May 27,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  ControlUnit_tb
# End time: 22:26:41 on May 27,2020, Elapsed time: 0:15:31
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug ControlUnit_tb 
# Start time: 22:26:41 on May 27,2020
# Loading sv_std.std
# Loading work.ControlUnit_tb
# Loading work.ControlUnit
# Loading work.InstructionMem
# Loading altera_mf_ver.altsyncram
# Loading work.Instruc_Reg
# Loading work.StateMachine
# Loading work.PC_Counter
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do ControlUnit_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /ControlUnit_tb/clk
# add wave -noupdate /ControlUnit_tb/reset
# add wave -noupdate /ControlUnit_tb/RF_s
# add wave -noupdate /ControlUnit_tb/RF_W_en
# add wave -noupdate /ControlUnit_tb/PC_Out
# add wave -noupdate /ControlUnit_tb/IR_Out
# add wave -noupdate /ControlUnit_tb/data
# add wave -noupdate /ControlUnit_tb/RF_Ra_addr
# add wave -noupdate /ControlUnit_tb/RF_Rb_addr
# add wave -noupdate /ControlUnit_tb/RF_W_addr
# add wave -noupdate /ControlUnit_tb/D_addr
# add wave -noupdate /ControlUnit_tb/OutState
# add wave -noupdate /ControlUnit_tb/NextState
# add wave -noupdate /ControlUnit_tb/ALU_s0
# add wave -noupdate /ControlUnit_tb/PC_clr
# add wave -noupdate /ControlUnit_tb/PC_up
# add wave -noupdate /ControlUnit_tb/IR_ld
# add wave -noupdate /ControlUnit_tb/D_wr
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {169 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 291
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {517 ps}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =110 PC_Out =0000001 Instruction Data =0000000000000000 Instruction Register Output =0000000000000000 RF_Ra_addr =xxxx RF_Rb_addr =xxxx RF_W_addr =xxxx D_addr =xxxxxxxx OutState =0011 ALU_s0 =xxx D_Wr =0 RF_s =x RF_W_en =0
# Time =190 PC_Out =0000010 Instruction Data =0011000100100011 Instruction Register Output =0010000000011111 RF_Ra_addr =xxxx RF_Rb_addr =xxxx RF_W_addr =1111 D_addr =00000001 OutState =0101 ALU_s0 =xxx D_Wr =0 RF_s =1 RF_W_en =1
# Time =250 PC_Out =0000011 Instruction Data =0011000100100011 Instruction Register Output =0011000100100011 RF_Ra_addr =0001 RF_Rb_addr =0010 RF_W_addr =0011 D_addr =00000001 OutState =0111 ALU_s0 =001 D_Wr =0 RF_s =0 RF_W_en =1
# Time =310 PC_Out =0000100 Instruction Data =0100101010010000 Instruction Register Output =0100101010010000 RF_Ra_addr =1010 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000001 OutState =1000 ALU_s0 =010 D_Wr =0 RF_s =0 RF_W_en =1
# Time =370 PC_Out =0000101 Instruction Data =0001111100000000 Instruction Register Output =0001111100000000 RF_Ra_addr =1111 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000000 OutState =0110 ALU_s0 =010 D_Wr =1 RF_s =0 RF_W_en =0
# Time =430 PC_Out =0000110 Instruction Data =0101000000000000 Instruction Register Output =0101000000000000 RF_Ra_addr =1111 RF_Rb_addr =1001 RF_W_addr =0000 D_addr =00000000 OutState =1001 ALU_s0 =010 D_Wr =0 RF_s =0 RF_W_en =0
# ** Note: $stop    : ./ControlUnit.sv(72)
#    Time: 492 ps  Iteration: 0  Instance: /ControlUnit_tb
# Break in Module ControlUnit_tb at ./ControlUnit.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 517 ps
# 
# End
