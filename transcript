# Reading C:/intelFPGA_lite/19.1/modelsim_ase/tcl/vsim/pref.tcl
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:49 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 00:27:49 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:50 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 00:27:51 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:52 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 00:27:52 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:53 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 00:27:53 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:54 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 00:27:54 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 00:27:55 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  30 R_data =0010000000000001 W_data =0010000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  50 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  70 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  90 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  95 R_data =0000000000000100 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =0010000000000001 ALU_Out = xxxxxxxxxxxxxxxx
# Time = 115 R_data =0000000000000100 W_data =1110000000000010 ALU_A=0000000000000011 ALU_B =0010000000000001 ALU_Out = 1110000000000010
# Time = 150 R_data =0000000000000011 W_data =1110000000000010 ALU_A=0000000000000011 ALU_B =0010000000000001 ALU_Out = 1110000000000010
# ** Note: $stop    : ./DataPath.sv(64)
#    Time: 155 ps  Iteration: 0  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 64
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 163 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:29:45 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 00:29:45 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:29:46 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 00:29:46 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:29:47 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 00:29:47 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:29:48 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 00:29:48 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:29:49 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 00:29:49 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 00:29:53 on May 28,2020, Elapsed time: 0:01:58
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 00:29:53 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  30 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  50 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  70 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  90 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx
# Time =  95 R_data =0000000000000100 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =0000000000000001 ALU_Out = xxxxxxxxxxxxxxxx
# Time = 115 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010
# Time = 150 R_data =0000000000000011 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010
# ** Note: $stop    : ./DataPath.sv(64)
#    Time: 155 ps  Iteration: 0  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 64
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 163 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:39:56 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 00:39:56 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:39:57 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 00:39:58 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:39:59 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 00:39:59 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:40:00 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 00:40:00 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:40:01 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 00:40:01 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 00:40:05 on May 28,2020, Elapsed time: 0:10:12
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 00:40:06 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx 
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx 
# Time =  30 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx 
# Time =  50 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx 
# Time =  70 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx 
# Time =  90 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx 
# Time =  95 R_data =0000000000000100 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =0000000000000001 ALU_Out = xxxxxxxxxxxxxxxx 
# Time = 115 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 
# Time = 150 R_data =0000000000000011 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 
# ** Note: $stop    : ./DataPath.sv(65)
#    Time: 155 ps  Iteration: 0  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 65
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 163 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:43:02 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 00:43:02 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:43:03 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 00:43:04 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:43:05 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 00:43:05 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:43:06 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 00:43:07 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:43:08 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 00:43:08 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 00:43:12 on May 28,2020, Elapsed time: 0:03:06
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 00:43:12 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  30 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  50 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  70 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  90 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  95 R_data =0000000000000100 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =0000000000000001 ALU_Out = xxxxxxxxxxxxxxxx ALU_S =001 D_WriteEn =0
# Time = 115 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0
# Time = 135 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# Time = 150 R_data =0000000000000011 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# ** Note: $stop    : ./DataPath.sv(65)
#    Time: 155 ps  Iteration: 0  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 65
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 163 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:51:10 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 00:51:11 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:51:12 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 00:51:13 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:51:14 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 00:51:14 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:51:15 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 00:51:15 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:51:16 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 00:51:16 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 00:51:21 on May 28,2020, Elapsed time: 0:08:09
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 00:51:22 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  30 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  50 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  70 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  90 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  95 R_data =0000000000000100 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =0000000000000001 ALU_Out = xxxxxxxxxxxxxxxx ALU_S =001 D_WriteEn =0
# Time = 115 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0
# Time = 135 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# Time = 150 R_data =0000000000000011 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# ** Note: $stop    : ./DataPath.sv(65)
#    Time: 155 ps  Iteration: 0  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 65
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 163 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:52:16 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 00:52:16 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:52:17 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 00:52:18 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:52:19 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 00:52:19 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:52:20 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 00:52:20 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:52:21 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 00:52:21 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 00:52:27 on May 28,2020, Elapsed time: 0:01:05
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 00:52:27 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  30 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  50 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  70 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  90 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  95 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000100 ALU_S =001 D_WriteEn =0
# Time = 115 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0
# Time = 135 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# Time = 150 R_data =0000000000000011 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# ** Note: $stop    : ./DataPath.sv(65)
#    Time: 155 ps  Iteration: 0  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 65
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 163 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:03:50 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:03:50 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:03:51 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:03:51 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:03:52 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:03:52 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:03:53 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:03:53 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:03:54 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:03:54 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:04:00 on May 28,2020, Elapsed time: 0:11:33
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:04:01 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  70 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  90 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time = 110 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time = 115 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000100 ALU_S =001 D_WriteEn =0
# Time = 135 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0
# Time = 155 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# Time = 170 R_data =0000000000000011 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# ** Note: $stop    : ./DataPath.sv(67)
#    Time: 175 ps  Iteration: 0  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 67
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 184 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:09:08 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:09:08 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:09:09 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:09:09 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:09:10 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:09:10 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:09:11 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:09:11 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:09:12 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:09:12 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:09:37 on May 28,2020, Elapsed time: 0:05:36
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:09:37 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  70 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  90 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time = 110 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time = 115 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000100 ALU_S =001 D_WriteEn =0
# Time = 135 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0
# Time = 155 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# Time = 170 R_data =0000000000000011 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# ** Note: $stop    : ./DataPath.sv(67)
#    Time: 175 ps  Iteration: 0  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 67
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 184 ps
# 
# End
do runlab_Reg_File.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:14:16 on May 28,2020
# vlog -reportprogress 300 ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:14:16 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 01:14:19 on May 28,2020, Elapsed time: 0:04:42
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work RegisterFile_tb 
# Start time: 01:14:19 on May 28,2020
# Loading sv_std.std
# Loading work.RegisterFile_tb
# Loading work.RegisterFile
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# ** Note: $stop    : ./RegisterFile.sv(48)
#    Time: 122 ps  Iteration: 0  Instance: /RegisterFile_tb
# Break in Module RegisterFile_tb at ./RegisterFile.sv line 48
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:16:16 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:16:17 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:16:17 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:16:17 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:16:18 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:16:18 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:16:19 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:16:19 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:16:20 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:16:20 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:16:25 on May 28,2020, Elapsed time: 0:02:06
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:16:26 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  70 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time =  90 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time = 110 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0
# Time = 115 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000100 ALU_S =001 D_WriteEn =0
# Time = 135 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0
# Time = 155 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# Time = 170 R_data =0000000000000011 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1
# ** Note: $stop    : ./DataPath.sv(67)
#    Time: 175 ps  Iteration: 0  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 67
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 184 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:18:24 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:18:24 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:18:25 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:18:25 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:18:26 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:18:26 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:18:27 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:18:27 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:18:28 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:18:28 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:18:33 on May 28,2020, Elapsed time: 0:02:07
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:18:33 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =xxxx, MuxS =x
# Time =  15 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  35 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1
# Time =  55 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1
# Time =  70 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1
# Time =  75 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1
# Time =  90 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1
# Time =  95 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1
# Time = 110 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1
# Time = 115 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000100 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0
# Time = 135 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0
# Time = 155 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1 RegF_W_addr =0101, MuxS =0
# Time = 170 R_data =0000000000000011 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1 RegF_W_addr =0101, MuxS =0
# ** Note: $stop    : ./DataPath.sv(67)
#    Time: 175 ps  Iteration: 0  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 67
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 184 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:24:14 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:24:14 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:24:15 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:24:16 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:24:17 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:24:17 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:24:18 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:24:18 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:24:19 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:24:19 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:24:33 on May 28,2020, Elapsed time: 0:06:00
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:24:34 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1
# Time =  70 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1
# Time =  90 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1
# Time = 110 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000100 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0
# Time = 130 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0
# Time = 150 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1 RegF_W_addr =0101, MuxS =0
# ** Note: $stop    : ./DataPath.sv(67)
#    Time: 170 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 67
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 179 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:27:24 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:27:24 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:27:25 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:27:25 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:27:26 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:27:26 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:27:27 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:27:27 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:27:28 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:27:28 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:27:40 on May 28,2020, Elapsed time: 0:03:06
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:27:40 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  50 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1
# Time = 110 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1
# Time = 130 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000100 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0
# Time = 150 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0
# Time = 170 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1 RegF_W_addr =0101, MuxS =0
# ** Note: $stop    : ./DataPath.sv(68)
#    Time: 190 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 68
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 200 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:32:47 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:32:47 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:32:48 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:32:48 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:32:49 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:32:49 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:32:50 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:32:50 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:32:51 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:32:52 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:33:06 on May 28,2020, Elapsed time: 0:05:26
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:33:06 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  70 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1
# Time =  90 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1
# Time = 150 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000100 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0
# Time = 170 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0
# Time = 190 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000011 ALU_B =0000000000000001 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1 RegF_W_addr =0101, MuxS =0
# ** Note: $stop    : ./DataPath.sv(69)
#    Time: 210 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 69
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 221 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:45:29 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:45:29 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:45:30 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:45:30 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:45:31 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:45:31 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:45:32 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:45:32 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:45:33 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:45:33 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:45:40 on May 28,2020, Elapsed time: 0:12:34
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:45:40 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  50 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1
# Time =  90 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1
# Time = 130 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1
# Time = 170 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1
# Time = 190 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1
# Time = 210 R_data =0000000000000100 W_data =0000000000000110 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000110 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0
# Time = 250 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1 RegF_W_addr =0101, MuxS =0
# ** Note: $stop    : ./DataPath.sv(72)
#    Time: 270 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 284 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:48:53 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:48:53 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:48:54 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:48:54 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:48:55 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:48:55 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:48:56 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:48:56 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:48:57 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:48:57 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:49:09 on May 28,2020, Elapsed time: 0:03:29
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:49:09 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1
# Time =  90 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1
# Time = 130 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1
# Time = 170 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1
# Time = 190 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1
# Time = 210 R_data =0000000000000100 W_data =0000000000000110 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000110 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0
# Time = 250 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1 RegF_W_addr =0101, MuxS =0
# ** Note: $stop    : ./DataPath.sv(72)
#    Time: 270 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 284 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:50:44 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:50:44 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:50:45 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:50:45 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:50:46 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:50:46 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:50:47 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:50:47 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:50:48 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:50:48 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:50:59 on May 28,2020, Elapsed time: 0:01:50
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:50:59 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1
# Time = 170 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1
# Time = 210 R_data =0000000000000100 W_data =0000000000000110 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000110 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0
# Time = 250 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1 RegF_W_addr =0101, MuxS =0
# ** Note: $stop    : ./DataPath.sv(72)
#    Time: 270 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 284 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:54:09 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:54:09 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:54:10 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:54:11 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:54:11 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:54:12 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:54:13 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:54:13 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:54:14 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:54:14 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:54:20 on May 28,2020, Elapsed time: 0:03:21
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:54:20 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x D_Addr =xxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000000
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000001
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000001
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000010
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000010
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000011
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000011
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000100
# Time = 170 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1 D_Addr =0000100
# Time = 210 R_data =0000000000000100 W_data =0000000000000110 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000110 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0 D_Addr =0000100
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0 D_Addr =0000100
# Time = 250 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1 RegF_W_addr =0101, MuxS =0 D_Addr =0000101
# ** Note: $stop    : ./DataPath.sv(72)
#    Time: 270 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 284 ps
# 
# End
# A time value could not be extracted from the current line
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:58:41 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 01:58:41 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:58:42 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 01:58:43 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:58:43 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 01:58:44 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:58:44 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 01:58:44 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 01:58:45 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 01:58:45 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 01:59:03 on May 28,2020, Elapsed time: 0:04:43
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 01:59:04 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x D_Addr =xxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000000
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000001
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000001
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000010
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000010
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000011
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000011
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000100
# Time = 170 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1 D_Addr =0000100
# Time = 210 R_data =0000000000000100 W_data =0000000000000110 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000110 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0 D_Addr =0000100
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0 D_Addr =0000100
# Time = 250 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000110 ALU_B =0000000000000010 ALU_Out = 0000000000000100 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000101
# ** Note: $stop    : ./DataPath.sv(71)
#    Time: 270 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 71
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 284 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:02:37 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 02:02:37 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:02:38 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 02:02:39 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:02:40 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 02:02:40 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:02:41 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 02:02:41 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:02:42 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 02:02:42 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 02:02:48 on May 28,2020, Elapsed time: 0:03:44
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 02:02:49 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x D_Addr =xxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000000
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000001
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000001
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000010
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000010
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000011
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000011
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000100
# Time = 170 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1 D_Addr =0000100
# Time = 210 R_data =0000000000000100 W_data =0000000000000110 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000110 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0 D_Addr =0000100
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0 D_Addr =0000100
# Time = 250 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000110 ALU_B =0000000000000010 ALU_Out = 0000000000000100 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000101
# ** Note: $stop    : ./DataPath.sv(71)
#    Time: 270 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 71
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 284 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:06:15 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 02:06:15 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:06:17 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 02:06:17 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:06:18 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 02:06:18 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:06:19 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 02:06:20 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:06:21 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 02:06:21 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 02:06:27 on May 28,2020, Elapsed time: 0:03:38
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 02:06:28 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x D_Addr =xxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000000
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000001
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000001
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000010
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000010
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000011
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000011
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000100
# Time = 170 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1 D_Addr =0000100
# Time = 210 R_data =0000000000000100 W_data =0000000000000110 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000110 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0 D_Addr =0000100
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0 D_Addr =0000100
# Time = 250 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000110 ALU_B =0000000000000010 ALU_Out = 0000000000000100 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000101
# Time = 270 R_data =0000000000000110 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000110
# ** Note: $stop    : ./DataPath.sv(72)
#    Time: 290 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 305 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:07:37 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 02:07:37 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:07:38 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 02:07:39 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:07:40 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 02:07:40 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:07:41 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 02:07:41 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:07:42 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 02:07:42 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 02:07:49 on May 28,2020, Elapsed time: 0:01:21
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 02:07:49 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x D_Addr =xxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000000
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000001
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000001
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000010
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000010
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000011
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000011
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000100
# Time = 170 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1 D_Addr =0000100
# Time = 210 R_data =0000000000000100 W_data =0000000000000110 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000110 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0 D_Addr =0000100
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0 D_Addr =0000100
# Time = 250 R_data =0000000000000100 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =0000000000000010 ALU_Out = xxxxxxxxxxxxxxxx ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000101
# Time = 270 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =0000000000000010 ALU_Out = xxxxxxxxxxxxxxxx ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000110
# ** Note: $stop    : ./DataPath.sv(72)
#    Time: 290 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 305 ps
# 
# End
do runlab_Reg_File.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:13:42 on May 28,2020
# vlog -reportprogress 300 ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 02:13:42 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 02:14:00 on May 28,2020, Elapsed time: 0:06:11
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work RegisterFile_tb 
# Start time: 02:14:00 on May 28,2020
# Loading sv_std.std
# Loading work.RegisterFile_tb
# Loading work.RegisterFile
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Time =   0 A =xxxxxxxxxxxxxxxx B =xxxxxxxxxxxxxxxx
# Time =  60 A =0000000000000001 B =0000000000000111
# Time =  90 A =0000000000000101 B =0000000000000111
# ** Note: $stop    : ./RegisterFile.sv(48)
#    Time: 122 ps  Iteration: 0  Instance: /RegisterFile_tb
# Break in Module RegisterFile_tb at ./RegisterFile.sv line 48
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:21:27 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 02:21:27 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:21:28 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 02:21:28 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:21:29 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 02:21:29 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:21:30 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 02:21:30 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:21:31 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 02:21:31 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 02:21:36 on May 28,2020, Elapsed time: 0:07:36
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 02:21:36 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x D_Addr =xxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000000
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000001
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000001
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000010
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000010
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000011
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000011
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000100
# Time = 170 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1 D_Addr =0000100
# Time = 210 R_data =0000000000000100 W_data =0000000000000110 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000110 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0 D_Addr =0000100
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0 D_Addr =0000100
# Time = 250 R_data =0000000000000100 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =0000000000000010 ALU_Out = xxxxxxxxxxxxxxxx ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000101
# Time = 270 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =0000000000000010 ALU_Out = xxxxxxxxxxxxxxxx ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000110
# ** Note: $stop    : ./DataPath.sv(72)
#    Time: 290 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 305 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:24:13 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 02:24:13 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:24:13 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 02:24:13 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:24:14 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 02:24:14 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:24:15 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 02:24:16 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:24:16 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 02:24:17 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 02:24:22 on May 28,2020, Elapsed time: 0:02:46
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 02:24:22 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x D_Addr =xxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000000
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000001
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000001
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000010
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000010
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000011
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000011
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000100
# Time = 170 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1 D_Addr =0000100
# Time = 210 R_data =0000000000000100 W_data =0000000000000110 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000110 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0 D_Addr =0000100
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0 D_Addr =0000100
# Time = 250 R_data =0000000000000100 W_data =0000000000000100 ALU_A=0000000000000110 ALU_B =0000000000000010 ALU_Out = 0000000000000100 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000101
# Time = 270 R_data =0000000000000110 W_data =0000000000000000 ALU_A=0000000000000010 ALU_B =0000000000000010 ALU_Out = 0000000000000000 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000110
# ** Note: $stop    : ./DataPath.sv(72)
#    Time: 290 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 305 ps
# 
# End
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:25:46 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 02:25:46 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:25:46 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 02:25:47 on May 28,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:25:47 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 02:25:47 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:25:48 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 02:25:48 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:25:49 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 02:25:49 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 02:25:57 on May 28,2020, Elapsed time: 0:01:35
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 02:25:57 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x D_Addr =xxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000000
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000001
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000001
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000010
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000010
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000011
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000011
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000100
# Time = 170 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1 D_Addr =0000100
# Time = 210 R_data =0000000000000100 W_data =0000000000000011 ALU_A=0000000000000001 ALU_B =0000000000000010 ALU_Out = 0000000000000011 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0 D_Addr =0000100
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0 D_Addr =0000100
# Time = 250 R_data =0000000000000100 W_data =0000000000000001 ALU_A=0000000000000011 ALU_B =0000000000000010 ALU_Out = 0000000000000001 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000101
# Time = 270 R_data =0000000000000011 W_data =0000000000000000 ALU_A=0000000000000010 ALU_B =0000000000000010 ALU_Out = 0000000000000000 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000110
# ** Note: $stop    : ./DataPath.sv(72)
#    Time: 290 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 305 ps
# 
# End
# WARNING: No extended dataflow license exists
do runrtl_DataPath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib.qdb".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qdb".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/taras/Documents/GitHub/ProjectB/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./DataMem.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:43:19 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataMem.v 
# -- Compiling module DataMem
# 
# Top level modules:
# 	DataMem
# End time: 02:43:19 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_16_2.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:43:20 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./Mux_16_2.sv 
# -- Compiling module Mux_16_2
# -- Compiling module Mux_16_2_tb
# 
# Top level modules:
# 	Mux_16_2_tb
# End time: 02:43:20 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:43:21 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 02:43:21 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:43:22 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 02:43:22 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 02:43:23 on May 28,2020
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 02:43:23 on May 28,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# End time: 02:43:32 on May 28,2020, Elapsed time: 0:17:35
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 02:43:32 on May 28,2020
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMem
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_16_2
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do DataPath_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /DataPath_tb/clk
# add wave -noupdate /DataPath_tb/RegF_W_en
# add wave -noupdate /DataPath_tb/MuxS
# add wave -noupdate /DataPath_tb/D_WriteEn
# add wave -noupdate /DataPath_tb/ALU_S
# add wave -noupdate /DataPath_tb/D_Addr
# add wave -noupdate /DataPath_tb/RegF_W_addr
# add wave -noupdate /DataPath_tb/RegF_Ra_addr
# add wave -noupdate /DataPath_tb/RegF_Rb_addr
# add wave -noupdate /DataPath_tb/ALU_A
# add wave -noupdate /DataPath_tb/ALU_B
# add wave -noupdate /DataPath_tb/ALU_Out
# add wave -noupdate /DataPath_tb/r_data
# add wave -noupdate /DataPath_tb/wData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {94 ps} 0}
# quietly wave cursor active 1
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time =   0 R_data =0000000000000000 W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =x RegF_W_addr =xxxx, MuxS =x D_Addr =xxxxxxx
# Time =  10 R_data =xxxxxxxxxxxxxxxx W_data =xxxxxxxxxxxxxxxx ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000000
# Time =  30 R_data =0000000000000000 W_data =0000000000000000 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0000, MuxS =1 D_Addr =0000001
# Time =  50 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000001
# Time =  70 R_data =0000000000000001 W_data =0000000000000001 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0001, MuxS =1 D_Addr =0000010
# Time =  90 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000010
# Time = 110 R_data =0000000000000010 W_data =0000000000000010 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0010, MuxS =1 D_Addr =0000011
# Time = 130 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000011
# Time = 150 R_data =0000000000000011 W_data =0000000000000011 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0011, MuxS =1 D_Addr =0000100
# Time = 170 R_data =0000000000000100 W_data =0000000000000100 ALU_A=xxxxxxxxxxxxxxxx ALU_B =xxxxxxxxxxxxxxxx ALU_Out = xxxxxxxxxxxxxxxx ALU_S =xxx D_WriteEn =0 RegF_W_addr =0100, MuxS =1 D_Addr =0000100
# Time = 210 R_data =0000000000000100 W_data =0000000000000011 ALU_A=0000000000000001 ALU_B =0000000000000010 ALU_Out = 0000000000000011 ALU_S =001 D_WriteEn =0 RegF_W_addr =0101, MuxS =0 D_Addr =0000100
# Time = 230 R_data =0000000000000100 W_data =0000000000000010 ALU_A=0000000000000100 ALU_B =0000000000000010 ALU_Out = 0000000000000010 ALU_S =010 D_WriteEn =0 RegF_W_addr =0110, MuxS =0 D_Addr =0000100
# Time = 250 R_data =0000000000000100 W_data =0000000000000001 ALU_A=0000000000000011 ALU_B =0000000000000010 ALU_Out = 0000000000000001 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000101
# Time = 270 R_data =0000000000000011 W_data =0000000000000000 ALU_A=0000000000000010 ALU_B =0000000000000010 ALU_Out = 0000000000000000 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000110
# Time = 290 R_data =0000000000000010 W_data =0000000000000000 ALU_A=0000000000000010 ALU_B =0000000000000010 ALU_Out = 0000000000000000 ALU_S =010 D_WriteEn =1 RegF_W_addr =0110, MuxS =0 D_Addr =0000110
# ** Note: $stop    : ./DataPath.sv(80)
#    Time: 310 ps  Iteration: 1  Instance: /DataPath_tb
# Break in Module DataPath_tb at ./DataPath.sv line 80
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 326 ps
# 
# End
# End time: 02:50:08 on May 28,2020, Elapsed time: 0:06:36
# Errors: 0, Warnings: 0
